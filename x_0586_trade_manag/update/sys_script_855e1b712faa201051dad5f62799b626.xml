<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_0586_trade_manag_trade</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_0586_trade_manag_trade">u_actual_quantityISNOTEMPTY^u_stock_priceISNOTEMPTY^EQ<item endquery="false" field="u_actual_quantity" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="false" field="u_stock_price" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Calculate Investment</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    try {
        current.investment = current.u_stock_price * current.u_actual_quantity;

        var entry = new GlideDateTime(current.getValue('entry_date'));
        var exit = new GlideDateTime();
        var duration = GlideDateTime.subtract(entry, exit);
        current.duration = (duration.getDayPart() >= 1) ? duration.getDayPart() : 1;

        if (current.u_exit_price == '') {
            if (current.investment.changes() || current.operation() == 'insert') {
                var entryDate = new GlideDateTime(current.getValue('entry_date'));
                var addExpense = new GlideRecord("x_0586_personal_ex_expenses");
                addExpense.initialize();
                addExpense.type = 'savings';

                if (current.instrument == 'stock') {
                    addExpense.category = 'trading_stocks';
                } else {
                    addExpense.category = 'stocks';
                }
                addExpense.payment_method = 'electronic';

                addExpense.details = current.u_stock.stock_symbol;
                if (current.operation() == 'insert') {
                    addExpense.amount = current.investment;
                    addExpense.date = entryDate.getDate();
                } else {
                    addExpense.amount = current.investment - previous.investment;
                }

                addExpense.insert();
            }
        } else {
            var getExpense = new GlideRecord("x_0586_personal_ex_expenses");
            getExpense.addEncodedQuery("type=savings^category=trading_stocks^ORcategory=stocks^payment_method=electronic^details=" + current.u_stock.stock_symbol.toString());
            getExpense.query();
            while (getExpense.next()) {
                getExpense.deleteRecord();
            }

            if (current.u_realised_pl != '') {
                var addIncome = new GlideRecord("x_0586_personal_ex_expenses");
                addIncome.initialize();
                addIncome.type = 'income';
                addIncome.category = 'stocks';
                if (current.instrument == 'stock') {
                    addIncome.subcategory = 'trading';
                } else {
                    addIncome.subcategory = 'Investing';
                }
                addIncome.payment_method = 'electronic';
                addIncome.details = current.u_stock.stock_symbol;
                addIncome.amount = current.u_realised_pl;
                addIncome.insert();
            }

        }
    } catch (err) {
        gs.addInfoMessage(err.toString());
    }


})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-02-26 12:40:50</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>855e1b712faa201051dad5f62799b626</sys_id>
        <sys_mod_count>14</sys_mod_count>
        <sys_name>Calculate Investment</sys_name>
        <sys_overrides/>
        <sys_package display_value="Trade Management" source="x_0586_trade_manag">a3d5a515db376300d8ccd421cf961925</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Trade Management">a3d5a515db376300d8ccd421cf961925</sys_scope>
        <sys_update_name>sys_script_855e1b712faa201051dad5f62799b626</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-01-24 07:48:21</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=855e1b712faa201051dad5f62799b626"/>
</record_update>
